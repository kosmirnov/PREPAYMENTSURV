if (!(require(ggplot2))) install.packages ("ggplot2")
if (!(require(zoo))) install.packages ("zoo")
setwd("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/PREPAYMENTSURV")
gc()
options(scipen=999)
options(digits=5)
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/PREPAYMENTSURV/FNMA.Rda")
FNMA$MINTEREST <- FNMA$MINTEREST/100
### YIELD ###
# 1. Real MINTEREST
FNMA$MONTH <- as.numeric(FNMA$MONTH)
ggplot(FNMA, aes(x=MONTH, y=MINTEREST, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0, 0.05, by = 0.005),labels = scales::percent)+
xlab("Months")+
ylab("Average Mortage Rate")
ggsave(file = "des_YIELD.jpeg")
# 2. Yield spread?
YIELD.SPREAD_AGG <- FNMA %>%
group_by(MONTH,REGION) %>%
dplyr::summarize(MEANS.AGG = mean(YIELD.SPREAD))
YIELD.SPREAD_AGG$MEANS.AGG <- YIELD.SPREAD_AGG$MEANS.AGG/100
ggplot(YIELD.SPREAD_AGG, aes(x=MONTH, y=MEANS.AGG, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0, 0.025, by = 0.002),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
ggsave(file = "des_YIELD.SPREAD.jpeg")
#ggplot(FNMA, aes(x=MONTH, y=MINTEREST_GROWTH, group=REGION)) +
#geom_line(aes(color=REGION),size=1)+
#theme_bw()+
#theme(legend.position = c(0.9, 0.8)) +
#scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
#scale_x_continuous(trans='log10')
#ggsave(file = "des_YIELD.jpeg")
?scale_x_yearmon
# This program will download from the internet and install the latest version of the above packages If they are not installed in your R environment. It is necessary to
# have internet connection to download these packages.
# If for any reason this program fails to run, please make sure that the above packages are installed, check the verion of the packages and
# make sure the functions called in this program are still in use and are compatible with the Operating System you are using.
# Clear Environment
gc()
rm(list=ls())
#######################################################################################################################################
setwd("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/RAW")
# Load Necessary Packages for this analysis
if (!(require(foreach))) install.packages ("foreach")
if (!(require(data.table))) install.packages ("data.table")
if (!(require(zoo))) install.packages ("zoo")
if (!(require(dplyr))) install.packages ("dplyr")
if (!(require(xts))) install.packages ("xts")
#1. LOAD the cleaned data
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/RAW/FNMA_temp.Rda")
#2. Create count Variables
FNMA <- FNMA %>%
group_by(LOAN_ID) %>%
mutate(STOP = row_number())%>%
ungroup()%>%
as.data.table()
FNMA$START <- FNMA$STOP -1
#3. LTV
# 3.1 IMPORT SHILLER INDEX DATA AND MERGE IT ON DATA
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/Shiller/SHILLER.Rda")
FNMA <- inner_join(FNMA, SHILLER, by = c("MSA" = "MSA", "MONTH" = "MONTH"))
FNMA <- as.data.table(FNMA)
FNMA_AGG <-FNMA[, .SD[.N], by ="LOAN_ID"]
check1<- subset(FNMA_AGG,FNMA_AGG$MONTH!="Mrz 2017" & FNMA_AGG$PREPAID==0)
# On a aggregate level, all loans prepaid before end date or were censored in the end of March 2017.
# Therefore, censoring before March 2017 can not exist.
# These observations censored due to a changing MSA
# Remove 42 observations due to changing MSA.
FNMA <- FNMA[ ! FNMA$LOAN_ID %in% check1$LOAN_ID, ]
rm('FNMA_AGG','check1')
#3.2 dynamic COMPUTE LTV
#FNMA$INTEREST.MONTHLY = FNMA$LAST_UPB*FNMA$ORIG_RT/12/100
#3.2.1. first compute individual house-price market value at t=0 out of initial LTV (OLTV)
FNMA$HOUSEPRICE= FNMA$VOL/(FNMA$OLTV/100)
#3.2.2 now one can emulate individual dynamic LTV-ratios
FNMA <- FNMA %>%
group_by(LOAN_ID) %>%
mutate(HOUSEPRICE.DEV = HOUSEPRICE*cumprod(1+SHGROWTH))%>%
ungroup()%>%
as.data.table()
FNMA$LTV <- (FNMA$LAST_UPB/FNMA$HOUSEPRICE.DEV)*100
#we assume that loans react expost on LTV change
FNMA[, LTV:=c(NA, LTV[-.N]), by=LOAN_ID]##
#4. yield
#4.1 JOIN AVERAGE-REGIONAL MORTGAGE-RATES
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/Mortgage/MINTEREST.Rda")
FNMA <- inner_join(FNMA, MINTEREST30, by = c("MONTH" = "MONTH", "REGION" = "REGION"))
FNMA <- as.data.table(FNMA)
# note that the data set now stops at Dec. 2015
#4.2. Yield Spread Incentive
FNMA$YIELD.SPREAD <- (FNMA$ORIG_RT-FNMA$MINTEREST)-0.75
#we assume that loans react expost on yield change
FNMA[, YIELD.SPREAD:=c(NA, YIELD.SPREAD[-.N]), by=LOAN_ID]##
FNMA<-na.omit(FNMA)
#5. Join regional Unemployment Data
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/Unemp/unemp.Rda")
FNMA <- inner_join(FNMA, UNEMP, by = c("MSAREG" = "MSAREG", "MONTH" = "MONTH"))
FNMA <- as.data.table(FNMA)
#6 assume that OCC_STAT variables that second-home property is threated as personal property.
FNMA$OCC_STAT[FNMA$OCC_STAT=="S"]<- "P"
FNMA$OCC_STAT <- factor(FNMA$OCC_STAT)
## NOTE, delte unemploymnt growth and fees
# 7. Categorization
# we assume a ATM/ITM break at 0.75 for the yield spread
FNMA$YIELD.CAT <- cut(FNMA$YIELD.SPREAD, breaks=c(-Inf,0, Inf), labels=c("OTM","ITM"))
FNMA$LTV.CAT <- cut(FNMA$LTV, breaks=c(-Inf,65,85, Inf), labels=c("<65","65-85","85"))
FNMA <- within(FNMA, LTV.CAT <- relevel(LTV.CAT, ref = 2))
FNMA$VOL.CAT <- cut(FNMA$VOL, breaks=c(-Inf,350000, Inf), labels=c("<350k",">350k"))
#FNMA <- within(FNMA, VOL.CAT <- relevel(VOL.CAT, ref = 2))
FNMA <- na.omit(FNMA)
#8. Years
FNMA$YEAR<- format(as.Date(FNMA$MONTH, format="%d/%m/%Y"),"%Y")
FNMA$YEAR <- as.character(FNMA$YEAR)
#9. TAX
FNMA$TAX <- as.numeric(FNMA$MSAREG=="NY")
FNMA$TAX <- as.numeric(FNMA$TAX)
#how many loans did we end up with
FNMA_AGG <-FNMA[, .SD[.N], by ="LOAN_ID"]
# Save a Copy to disk or write a .txt file.
save(FNMA, file="FNMA.Rda")
FINAL_time<-coxph(Surv(START,STOP,PREPAID)~YIELD.CAT+CSCORE+CSCORE:START+LTV.CAT+LTV.CAT:START+OCC_STAT+OCC_STAT:START+DTI+UNEMP+VOL.CAT+VOL.CAT:START+YIELD.CAT:START+UNEMP+TAX, data=FNMA)
summary(FINAL_time)
extractAIC(FINAL_time)
zph_time <- cox.zph(FINAL_time)
zph_time
if (!(require(survminer))) install.packages ("survminer")
if (!(require(survival))) install.packages ("survival")
if (!(require(stargazer))) install.packages ("stargazer")
if (!(require(dplyr))) install.packages ("dplyr")
if (!(require(data.table))) install.packages ("data.table")
if (!(require(ggplot2))) install.packages ("ggplot2")
if (!(require(zoo))) install.packages ("zoo")
setwd("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/PREPAYMENTSURV")
gc()
options(scipen=999)
options(digits=5)
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/PREPAYMENTSURV/FNMA.Rda")
FNMA$MINTEREST <- FNMA$MINTEREST/100
### YIELD ###
# 1. Real MINTEREST
FNMA$MONTH <- as.numeric(FNMA$MONTH)
ggplot(FNMA, aes(x=MONTH, y=MINTEREST, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0, 0.05, by = 0.005),labels = scales::percent)+
xlab("Months")+
ylab("Average Mortage Rate")
ggsave(file = "des_YIELD.jpeg")
# 2. Yield spread?
YIELD.SPREAD_AGG <- FNMA %>%
group_by(MONTH,REGION) %>%
dplyr::summarize(MEANS.AGG = mean(YIELD.SPREAD))
YIELD.SPREAD_AGG$MEANS.AGG <- YIELD.SPREAD_AGG$MEANS.AGG/100
ggplot(YIELD.SPREAD_AGG, aes(x=MONTH, y=MEANS.AGG, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0, 0.025, by = 0.002),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
ggsave(file = "des_YIELD.SPREAD.jpeg")
# This program will download from the internet and install the latest version of the above packages If they are not installed in your R environment. It is necessary to
# have internet connection to download these packages.
# If for any reason this program fails to run, please make sure that the above packages are installed, check the verion of the packages and
# make sure the functions called in this program are still in use and are compatible with the Operating System you are using.
# Clear Environment
gc()
rm(list=ls())
#######################################################################################################################################
setwd("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/RAW")
# Load Necessary Packages for this analysis
if (!(require(foreach))) install.packages ("foreach")
if (!(require(data.table))) install.packages ("data.table")
if (!(require(zoo))) install.packages ("zoo")
if (!(require(dplyr))) install.packages ("dplyr")
if (!(require(xts))) install.packages ("xts")
#1. LOAD the cleaned data
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/RAW/FNMA_temp.Rda")
#2. Create count Variables
FNMA <- FNMA %>%
group_by(LOAN_ID) %>%
mutate(STOP = row_number())%>%
ungroup()%>%
as.data.table()
FNMA$START <- FNMA$STOP -1
#3. LTV
# 3.1 IMPORT SHILLER INDEX DATA AND MERGE IT ON DATA
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/Shiller/SHILLER.Rda")
FNMA <- inner_join(FNMA, SHILLER, by = c("MSA" = "MSA", "MONTH" = "MONTH"))
FNMA <- as.data.table(FNMA)
FNMA_AGG <-FNMA[, .SD[.N], by ="LOAN_ID"]
check1<- subset(FNMA_AGG,FNMA_AGG$MONTH!="Mrz 2017" & FNMA_AGG$PREPAID==0)
# On a aggregate level, all loans prepaid before end date or were censored in the end of March 2017.
# Therefore, censoring before March 2017 can not exist.
# These observations censored due to a changing MSA
# Remove 42 observations due to changing MSA.
FNMA <- FNMA[ ! FNMA$LOAN_ID %in% check1$LOAN_ID, ]
rm('FNMA_AGG','check1')
#3.2 dynamic COMPUTE LTV
#FNMA$INTEREST.MONTHLY = FNMA$LAST_UPB*FNMA$ORIG_RT/12/100
#3.2.1. first compute individual house-price market value at t=0 out of initial LTV (OLTV)
FNMA$HOUSEPRICE= FNMA$VOL/(FNMA$OLTV/100)
#3.2.2 now one can emulate individual dynamic LTV-ratios
FNMA <- FNMA %>%
group_by(LOAN_ID) %>%
mutate(HOUSEPRICE.DEV = HOUSEPRICE*cumprod(1+SHGROWTH))%>%
ungroup()%>%
as.data.table()
FNMA$LTV <- (FNMA$LAST_UPB/FNMA$HOUSEPRICE.DEV)*100
#we assume that loans react expost on LTV change
FNMA[, LTV:=c(NA, LTV[-.N]), by=LOAN_ID]##
#4. yield
#4.1 JOIN AVERAGE-REGIONAL MORTGAGE-RATES
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/Mortgage/MINTEREST.Rda")
FNMA <- inner_join(FNMA, MINTEREST30, by = c("MONTH" = "MONTH", "REGION" = "REGION"))
FNMA <- as.data.table(FNMA)
# note that the data set now stops at Dec. 2015
#4.2. Yield Spread Incentive
FNMA$YIELD.SPREAD <- (FNMA$ORIG_RT-FNMA$MINTEREST)-0.75
#we assume that loans react expost on yield change
FNMA[, YIELD.SPREAD:=c(NA, YIELD.SPREAD[-.N]), by=LOAN_ID]##
FNMA<-na.omit(FNMA)
#5. Join regional Unemployment Data
load("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/Unemp/unemp.Rda")
FNMA <- inner_join(FNMA, UNEMP, by = c("MSAREG" = "MSAREG", "MONTH" = "MONTH"))
FNMA <- as.data.table(FNMA)
#6 assume that OCC_STAT variables that second-home property is threated as personal property.
FNMA$OCC_STAT[FNMA$OCC_STAT=="S"]<- "P"
FNMA$OCC_STAT <- factor(FNMA$OCC_STAT)
## NOTE, delte unemploymnt growth and fees
# 7. Categorization
# we assume a ATM/ITM break at 0.75 for the yield spread
FNMA$YIELD.CAT <- cut(FNMA$YIELD.SPREAD, breaks=c(-Inf,0, Inf), labels=c("OTM","ITM"))
FNMA$LTV.CAT <- cut(FNMA$LTV, breaks=c(-Inf,65,85, Inf), labels=c("<65","65-85","85"))
FNMA <- within(FNMA, LTV.CAT <- relevel(LTV.CAT, ref = 2))
FNMA$VOL.CAT <- cut(FNMA$VOL, breaks=c(-Inf,350000, Inf), labels=c("<350k",">350k"))
#FNMA <- within(FNMA, VOL.CAT <- relevel(VOL.CAT, ref = 2))
FNMA <- na.omit(FNMA)
#8. Years
FNMA$YEAR<- format(as.Date(FNMA$MONTH, format="%d/%m/%Y"),"%Y")
FNMA$YEAR <- as.character(FNMA$YEAR)
#9. TAX
FNMA$TAX <- as.numeric(FNMA$MSAREG=="NY")
FNMA$TAX <- as.numeric(FNMA$TAX)
#how many loans did we end up with
FNMA_AGG <-FNMA[, .SD[.N], by ="LOAN_ID"]
# Save a Copy to disk or write a .txt file.
save(FNMA, file="FNMA.Rda")
FNMA$MINTEREST <- FNMA$MINTEREST/100
### YIELD ###
# 1. Real MINTEREST
FNMA$MONTH <- as.numeric(FNMA$MONTH)
ggplot(FNMA, aes(x=MONTH, y=MINTEREST, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0, 0.05, by = 0.005),labels = scales::percent)+
xlab("Months")+
ylab("Average Mortgage Rate")
ggsave(file = "des_YIELD.jpeg")
# 2. Yield spread?
YIELD.SPREAD_AGG <- FNMA %>%
group_by(MONTH,REGION) %>%
dplyr::summarize(MEANS.AGG = mean(YIELD.SPREAD))
YIELD.SPREAD_AGG$MEANS.AGG <- YIELD.SPREAD_AGG$MEANS.AGG/100
ggplot(YIELD.SPREAD_AGG, aes(x=MONTH, y=MEANS.AGG, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0, 0.025, by = 0.002),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
ggsave(file = "des_YIELD.SPREAD.jpeg")
ggplot(YIELD.SPREAD_AGG, aes(x=MONTH, y=MEANS.AGG, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(-0.03, 0.02, by = 0.002),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
ggsave(file = "des_YIELD.SPREAD.jpeg")
setwd("C:/Users/Kons/OneDrive/MASTERARBEIT/DATA/PREPAYMENTSURV")
ggplot(YIELD.SPREAD_AGG, aes(x=MONTH, y=MEANS.AGG, group=REGION)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(-0.03, 0.02, by = 0.002),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
ggsave(file = "des_YIELD.SPREAD.jpeg")
View(FNMA)
View(FNMA)
HP <- subset(FNMA,MSAREG=="FL")
View(YIELD.SPREAD_AGG)
View(HP)
View(FNMA)
HP <- subset(FNMA,MSAREG=="NY")
View(HP)
count(FNMA,MSAREG)
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="MIA" | MSAREG=="LA" | MSAREG=="LV")
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
ggplot(HP, aes(x=MONTH, y=SHILLER, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" )
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
LTV.AGG <- FNMA %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
View(LTV.AGG)
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=REGION),size=1)+
theme_bw()
View(LTV.AGG)
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" | MSAREG=="DET")
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" | MSAREG=="MIA")
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" | MSAREG=="CHI")
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" | MSAREG=="LV")
#4. LTV
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" | MSAREG=="LV"| MSAREG=="CHI")
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(-0.04, 0.05, by = 0.002),labels = scales::percent)+
xlab("Months")+
ylab("Shiller Growth")
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(-0.04, 0.05, by = 0.01),labels = scales::percent)+
xlab("Months")+
ylab("Shiller-Case Growth")
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.1, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
LTV.AGG$MEANS.AGG <- LTV.AGG$MEANS.AGG/100
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0.45, 0.85, by = 0.2),labels = scales::percent)+
xlab("Months")+
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0.45, 0.85, by = 0.2),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0.45, 0.85, by = 0.2),labels = scales::percent)+
xlab("Months")+
ylab("Yield Spread")
HP <- subset(FNMA,MSAREG=="NY" | MSAREG=="LA" | MSAREG=="LV"| MSAREG=="CHI")
ggplot(HP, aes(x=MONTH, y=SHGROWTH, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(-0.04, 0.05, by = 0.01),labels = scales::percent)+
xlab("Months")+
ylab("Shiller-Case Growth")
ggsave(file = "des_SHG.jpeg")
#4. LTV
LTV.AGG <- HP %>%
group_by(MONTH,MSAREG) %>%
dplyr::summarize(MEANS.AGG = mean(LTV))
LTV.AGG$MEANS.AGG <- LTV.AGG$MEANS.AGG/100
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0.45, 0.85, by = 0.2),labels = scales::percent)+
xlab("Months")+
ylab("LTV")
ggsave(file = "des_LTV.jpeg")
test <- subset(FNMA_AGG,MSAREG=="CHI")
test <- subset(FNMA_AGG,MSAREG=="NY")
test <- subset(FNMA_AGG,MSAREG=="LA")
1200/31000
LTV.NATION <- HP %>%
group_by(MONTH) %>%
dplyr::summarize(MEANS.NATION = mean(LTV))
View(LTV.NATION)
LTV.NATION <- FNMA %>%
group_by(MONTH) %>%
dplyr::summarize(MEANS.NATION = mean(LTV))
View(LTV.NATION)
SHG.NATION <- FNMA %>%
group_by(MONTH) %>%
dplyr::summarize(MEANS.NATION = mean(SHGROWTH))
View(SHG.NATION)
ggplot(LTV.AGG, aes(x=MONTH, y=MEANS.AGG, group=MSAREG)) +
geom_line(aes(color=MSAREG),size=1)+
theme_bw()+
theme(legend.position = c(0.9, 0.8)) +
scale_color_manual(values = c("#86BC25","#0076A8","#BBBCBC","#E3E48D","#A0DCFF"))+
scale_x_yearmon(breaks = seq(from = min(FNMA$MONTH),
to = max(FNMA$MONTH)))+
scale_y_continuous(breaks = seq(0.45, 0.85, by = 0.2),labels = scales::percent)+
xlab("Months")+
ylab("LTV")+
ggplot(LTV.NATION, aes(x=MONTH, y=MEANS.AGG))
